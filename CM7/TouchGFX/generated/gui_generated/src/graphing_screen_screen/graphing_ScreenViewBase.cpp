/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/graphing_screen_screen/graphing_ScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

graphing_ScreenViewBase::graphing_ScreenViewBase() :
    animationEndedCallback(this, &graphing_ScreenViewBase::animationEndedCallbackHandler),
    interaction2EndedCallback(this, &graphing_ScreenViewBase::interaction2EndedCallbackHandler),
    interaction3EndedCallback(this, &graphing_ScreenViewBase::interaction3EndedCallbackHandler),
    sliderValueChangedCallback(this, &graphing_ScreenViewBase::sliderValueChangedCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    container1.setPosition(0, 0, 800, 480);
    add(container1);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(54, 53, 59));
    add(box1);

    box2.setPosition(0, 1, 800, 480);
    box2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box2);

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    background.setAlpha(104);
    add(background);

    main_container.setXY(221, 44);
    main_container.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_SWIPE_CONTAINER_PAGER_ID), touchgfx::Bitmap(BITMAP_SWIPE_CONTAINER_PAGER_ID));
    main_container.setPageIndicatorXY(0, 0);
    main_container.setSwipeCutoff(50);
    main_container.setEndSwipeElasticWidth(50);

    car_container.setWidth(362);
    car_container.setHeight(426);
    car.setXY(50, 259);
    car.setBitmaps(BITMAP_CAR_00_ID, BITMAP_CAR_47_ID);
    car.setUpdateTicksInterval(4);
    car.startAnimation(false, true, false);
    car.setDoneAction(animationEndedCallback);
    car_container.add(car);

    circle.setXY(53, 280);
    circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
    car_container.add(circle);

    Image4.setXY(253, 200);
    Image4.setBitmap(touchgfx::Bitmap(BITMAP_VECTOR_19_ID));
    car_container.add(Image4);

    image5.setXY(-34, 169);
    image5.setBitmap(touchgfx::Bitmap(BITMAP_VECTOR_20_ID));
    car_container.add(image5);

    mph_lable.setPosition(98, 149, 151, 28);
    mph_lable.setColor(touchgfx::Color::getColorFromRGB(102, 102, 102));
    mph_lable.setLinespacing(0);
    mph_lable.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z0UY));
    car_container.add(mph_lable);

    mph.setPosition(48, -5, 250, 148);
    mph.setColor(touchgfx::Color::getColorFromRGB(102, 102, 102));
    mph.setLinespacing(0);
    Unicode::snprintf(mphBuffer, MPH_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_49UH).getText());
    mph.setWildcard(mphBuffer);
    mph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UE0S));
    car_container.add(mph);

    gauge1.setBackground(touchgfx::Bitmap(BITMAP_GAUGE_ID));
    gauge1.setBackgroundOffset(0, -45);
    gauge1.setPosition(615, -202, 336, 336);
    gauge1.setCenter(168, 168);
    gauge1.setStartEndAngle(-117, 121);
    gauge1.setRange(10, 100);
    gauge1.setValue(92);
    gauge1.setNeedle(BITMAP_NEEDLE_3_ID, 39.1f, 103.6f);
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge1.setArcVisible();
    gauge1Painter.setBitmap(touchgfx::Bitmap(BITMAP_SWOOP_ID));
    gauge1.getArc().setPainter(gauge1Painter);
    gauge1.getArc().setRadius(137);
    gauge1.getArc().setLineWidth(136);
    gauge1.getArc().setCapPrecision(180);
    gauge1.setArcPosition(33, 33, 270, 198);
    car_container.add(gauge1);

    drive.setXY(86, 194);
    drive.setBitmap(touchgfx::Bitmap(BITMAP_DRIVE_ID));
    drive.setAlpha(0);
    car_container.add(drive);

    park.setXY(86, 194);
    park.setBitmap(touchgfx::Bitmap(BITMAP_PARK_ID));
    car_container.add(park);

    reverse.setXY(86, 194);
    reverse.setBitmap(touchgfx::Bitmap(BITMAP_REVERSE_ID));
    reverse.setAlpha(0);
    car_container.add(reverse);

    neutral.setXY(86, 194);
    neutral.setBitmap(touchgfx::Bitmap(BITMAP_NEUTRAL_ID));
    neutral.setAlpha(0);
    car_container.add(neutral);

    main_container.add(car_container);

    tire_pres_pg.setWidth(362);
    tire_pres_pg.setHeight(426);
    tire_pre.setXY(2, -8);
    tire_pre.setBitmap(touchgfx::Bitmap(BITMAP_TIRE_PRESSURE_1_ID));
    tire_pres_pg.add(tire_pre);

    pres_fl.setXY(97, 115);
    pres_fl.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    pres_fl.setLinespacing(0);
    Unicode::snprintf(pres_flBuffer, PRES_FL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_P78H).getText());
    pres_fl.setWildcard(pres_flBuffer);
    pres_fl.resizeToCurrentText();
    pres_fl.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ED0G));
    tire_pres_pg.add(pres_fl);

    pres_fr.setXY(245, 115);
    pres_fr.setColor(touchgfx::Color::getColorFromRGB(66, 76, 255));
    pres_fr.setLinespacing(0);
    Unicode::snprintf(pres_frBuffer, PRES_FR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ONR6).getText());
    pres_fr.setWildcard(pres_frBuffer);
    pres_fr.resizeToCurrentText();
    pres_fr.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4JZO));
    tire_pres_pg.add(pres_fr);

    pres_rr.setXY(246, 223);
    pres_rr.setColor(touchgfx::Color::getColorFromRGB(66, 76, 255));
    pres_rr.setLinespacing(0);
    Unicode::snprintf(pres_rrBuffer, PRES_RR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DATJ).getText());
    pres_rr.setWildcard(pres_rrBuffer);
    pres_rr.resizeToCurrentText();
    pres_rr.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BWD6));
    tire_pres_pg.add(pres_rr);

    pres_rl.setXY(96, 223);
    pres_rl.setColor(touchgfx::Color::getColorFromRGB(66, 76, 255));
    pres_rl.setLinespacing(0);
    Unicode::snprintf(pres_rlBuffer, PRES_RL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JSZ2).getText());
    pres_rl.setWildcard(pres_rlBuffer);
    pres_rl.resizeToCurrentText();
    pres_rl.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9P52));
    tire_pres_pg.add(pres_rl);

    main_container.add(tire_pres_pg);

    map_page.setWidth(362);
    map_page.setHeight(426);
    map_bg.setXY(31, -1179);
    map_bg.setBitmap(touchgfx::Bitmap(BITMAP_MAP_BG_ID));
    map_page.add(map_bg);

    map_mask.setXY(31, -43);
    map_mask.setBitmap(touchgfx::Bitmap(BITMAP_MAP_MASK_ID));
    map_page.add(map_mask);

    arrow.setXY(121, 219);
    arrow.setBitmap(touchgfx::Bitmap(BITMAP_ARROW_ID));
    map_page.add(arrow);

    main_container.add(map_page);

    main_container.setSelectedPage(0);
    add(main_container);

    slider1.setXY(2, 438);
    slider1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_ROUND_LIGHT_ID));
    slider1.setupHorizontalSlider(16, 11, 0, 0, 200);
    slider1.setValueRange(0, 200);
    slider1.setValue(0);
    slider1.setNewValueCallback(sliderValueChangedCallback);
    add(slider1);

    digitalClock1.setPosition(277, 10, 250, 30);
    digitalClock1.setColor(touchgfx::Color::getColorFromRGB(102, 102, 102));
    digitalClock1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9ZRH));
    digitalClock1.displayLeadingZeroForHourIndicator(true);
    digitalClock1.setDisplayMode(touchgfx::DigitalClock::DISPLAY_12_HOUR);
    digitalClock1.setTime12Hour(10, 10, 0, true);
    add(digitalClock1);

    battery_level.setXY(619, 13);
    battery_level.setProgressIndicatorPosition(0, 0, 163, 388);
    battery_level.setRange(0, 100);
    battery_level.setDirection(touchgfx::AbstractDirectionProgress::UP);
    battery_level.setBackground(touchgfx::Bitmap(BITMAP_BATTERY_BG_ID));
    battery_level.setBitmap(BITMAP_BATTERY_FILL_ID);
    battery_level.setValue(60);
    battery_level.setAnchorAtZero(true);
    add(battery_level);

    right_container1.setXY(2, 1);
    add(right_container1);
}

graphing_ScreenViewBase::~graphing_ScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void graphing_ScreenViewBase::setupScreen()
{
    right_container1.initialize();
}

void graphing_ScreenViewBase::animationEndedCallbackHandler(const touchgfx::AnimatedImage& src)
{
    if (&src == &car)
    {
        //Interaction2
        //When car animation ended fade gauge1
        //Fade gauge1 to alpha:255 with LinearIn easing in 1000 ms (60 Ticks)
        gauge1.clearFadeAnimationEndedAction();
        gauge1.startFadeAnimation(255, 60, touchgfx::EasingEquations::linearEaseIn);
        gauge1.setFadeAnimationEndedAction(interaction2EndedCallback);
    }
}

void graphing_ScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &slider1)
    {
        //Interaction7
        //When slider1 value changed call virtual function
        //Call sliderValueChanged
        sliderValueChanged(value);
    }
}

void graphing_ScreenViewBase::interaction2EndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::Gauge>& comp)
{
    //Interaction3
    //When Interaction2 completed fade background
    //Fade background to alpha:150 with LinearIn easing in 250 ms (15 Ticks)
    background.clearFadeAnimationEndedAction();
    background.startFadeAnimation(150, 15, touchgfx::EasingEquations::linearEaseIn);
    background.setFadeAnimationEndedAction(interaction3EndedCallback);

}

void graphing_ScreenViewBase::interaction3EndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::Image>& comp)
{
    //Interaction5
    //When Interaction3 completed call virtual function
    //Call backGroundAnimationDone
    backGroundAnimationDone();

}
