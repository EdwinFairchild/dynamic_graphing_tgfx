/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef RIGHT_CONTAINERBASE_HPP
#define RIGHT_CONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/containers/progress_indicators/ImageProgress.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class right_containerBase : public touchgfx::Container
{
public:
    right_containerBase();
    virtual ~right_containerBase();
    virtual void initialize();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::SwipeContainer page1;
    touchgfx::Container right_temp_page;
    touchgfx::FadeAnimator< touchgfx::ImageProgress > temp_progress;
    touchgfx::TextAreaWithOneWildcard temp_text_area;
    touchgfx::Container left_gauge_page;
    touchgfx::ImageProgress gauge_left_progress;
    touchgfx::Container gauge_left;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEMP_TEXT_AREA_SIZE = 10;
    touchgfx::Unicode::UnicodeChar temp_text_areaBuffer[TEMP_TEXT_AREA_SIZE];

private:

};

#endif // RIGHT_CONTAINERBASE_HPP
