// 4.24.0 0xc68d6a97
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_background[]; // BITMAP_BACKGROUND_ID = 0, Size: 800x480 pixels
extern const unsigned char image_dash_2[]; // BITMAP_DASH_2_ID = 1, Size: 800x480 pixels
extern const unsigned char image_dash_2_test[]; // BITMAP_DASH_2_TEST_ID = 2, Size: 800x480 pixels
extern const unsigned char image_gauge[]; // BITMAP_GAUGE_ID = 3, Size: 336x336 pixels
extern const unsigned char image_needle[]; // BITMAP_NEEDLE_ID = 4, Size: 20x106 pixels
extern const unsigned char image_speed_highlight[]; // BITMAP_SPEED_HIGHLIGHT_ID = 5, Size: 288x288 pixels
extern const unsigned char image_swoop[]; // BITMAP_SWOOP_ID = 6, Size: 270x198 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_background, 0, 800, 480, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dash_2, 0, 800, 480, 1, 1, 798, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 478, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dash_2_test, 0, 800, 480, 445, 299, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 32, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_gauge, 0, 336, 336, 259, 154, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_needle, 0, 20, 106, 5, 37, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 54, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_speed_highlight, 0, 288, 288, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_swoop, 0, 270, 198, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
